package com.py.sheet.sorting;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Q17_TwoSum {

	static public int[] twoSum(int[] nums, int target) {
		// contains <difference,index> index of the element generated the difference
        Map<Integer, Integer> map = new HashMap<>();
        int indices[] = new int[2];
        // initialising for no sum present
        indices[0]=indices[1]=-1;
        for(int i=0;i<nums.length; i++){
            int diff=target-nums[i];
            /*
             * logic is simple:
             * 		if the coming element (arr[i]) is the difference generated by some element in the map
             * then deffinetly these two indices produces the sum
             * 		the index in map corresponds to the element that occured first  in the array
             */
            if(map.containsKey(nums[i])){
                indices[0]= map.get(nums[i]);
                indices[1]=i;
            }   
            map.put(diff,i);
        }
        return indices;
    }
	public static void main(String[] args) {
		int arr[]= {2,7,11,15};
		int target=9;
		System.out.println(Arrays.toString(twoSum(arr, target)));
	}

}
